common:
    buttons:
        cancel:         'Cancel'
        edit:           'Edit'
        save:           'Save'
    sex:
        male:           'Male'
        female:         'Female'
        unknown:        'Unknown'
    more:               'More...'
    sentenceSeparator:  '. '
    tomorrow:           'Tomorrow'
    today:              'Today'
    yesterday:          'Yesterday'
    typeHere:           'Type here...'
    dateTime:           '{date} at {time}'

ChatMessageBodyWidget:
    edited:             'edited {when}'

CityNameAutocomplete:
    label:              'City'

CommentForm:
    commentHere:        'Comment here...'

CommentListWidget:
    beFirst:            'Be the first one to comment!'

CommentTile:
    actions:
        delete:         'Delete'
    deletePrompt:       'Delete this comment?'

ConfirmScreen:
    ok:                 'OK'
    cancel:             'Cancel'

ContactStatusCubit:
    downloadEnabledFalse:   'Not downloading anything'
    errorLastTried:         'Error, last tried {durationAgo}'
    lastSynchronized:       'Last synchronized {durationAgo}'
    synchronizingNow:       'Synchronizing now'

CountryDropdown:
    label:              'Country'

CreateLessonScreen:
    title:              'Import a YouTube Lesson'
    url:                'URL'
    urlTip:             'You can only import your own videos.'
    errors:
        duplicate:      'This lesson is already imported.'

CreateWithdrawAccountScreen:
    title:                  'Add Withdraw Account'
    inputs:
        title:              'Name this account to store'
    buttons:
        add:                'Add'

DeliveryProblemButton:
    text:               'Problem?'

DonePopupScreen:
    text:               'Done'

EditImageListScreen:

    actions:
        move:           'Move to Album...'
        copy:           'Copy to Album...'
        delete:         'Delete'

    publishNSelected:   'Publish {n}'
    select:             'Select Images'

    title:
        # Trailing after something else.
        allImages:      'All Images'
        # A sole title.
        allMyImages:    'All My Images'
        albums:
            one:        '{} Album'
            other:      '{} Albums'
        profiles:
            one:        '{} Profile'
            other:      '{} Profiles'
        purposes:
            one:        '{} Album Type'
            other:      '{} Album Types'
        subjects:
            one:        '{} Subject'
            other:      '{} Subjects'

EditIntegrationScreen:
    downloadNewContentFrom:     'Download new images from {serviceName}'
    noToken:                    'No token. Authorize the app to download the images'
    tokenIsValidFor:            'Token is valid for {durationValidFor}'

    # Statuses
    errorLastTried:             'Error, last tried {durationAgo}'
    imagesNeverSynchronized:    'Never synchronized'
    lastSynchronized:           'Last synchronized {durationAgo}'
    synchronizingNow:           'Synchronizing now'

    buttons:
        synchronizeNow:         'Synchronize Now'
        viewImages:             'View Images'

EditLessonScreen:
    title:                      'Edit Lesson'

EditProfileScreen:
    title:          'Edit Profile'
    firstName:      'First Name'
    middleName:     'Middle Name'
    lastName:       'Last Name'
    iSpeak:         'I Speak:'
    addLanguage:    'Add a Language'
    location:       'Location'

EditTeacherSubjectScreen:
    tabs:
        prices:
            title:  'Price'
        body:
            title:  'Bio'

    title:          'Teaching {subjectTitle}'

EditTeachingScreen:
    title:          'Subjects that I Teach'

errors:
    cannotLoadMore: 'Error loading more'
    noInternet:     'Could not load the info'
    notAuthorized:  'Access denied'

ExploreRootTabWidget:
    title:          'What Do You Want to Learn?'

ExploreTabWidget:
    iconTitle:      'Explore'

FilterScreen:
    buttons:
        apply:      'Apply'
        clear:      'Clear'

GalleryImageFilterDialogContentWidget:
    subtitles:
        formats:    'Teaching Format'
        location:   'Teacher''s Location'
        price:      'Price per hour'

ImagesTabWidget:
    title:          'Works'

InstagramContactParamsWidget:
    buttons:
        selectSubject:  'Select Subject...'

    placeNewImagesTo:
        title:      'Place new images to:'
        unsorted:   'Unsorted, so I can set an album for each one'
        backstage:  'To My Life and Backstage album'
        portfolio:  'To My Portfolio'

    placeNewImagesToSelected:
        backstage:  'To My Life and Backstage album as a teacher of'
        portfolio:  'To My Portfolio as a teacher of'

InstagramStatusCubit:
    addNewImagesToUnsorted:     'Place new images to Unsorted'
    addNewImagesToBackstage:    'Place new images to My Life and Backstage as a teacher of {subjectTitle}'
    addNewImagesToPortfolio:    'Place new images to My Portfolio as a teacher of {subjectTitle}'

LearningLessonsTabWidget:
    title:          'Lessons'
    toSchedule:     'To Schedule'
    upcoming:       'Upcoming'
    toApprove:      'To Approve'
    resolved:       'Past and Cancelled'

LearningTabWidget:
    iconTitle:      'Learn'

LessonsTabWidget:
    title:          'Lessons'

LessonsThumbWidget:
    title:          'Lessons'

LocationEditorWidget:
    streetAddress:      'Street Address'
    showTo:             'Show to:'
    privacy:
        exactVisible:   'Everyone, up to street address'
        fuzzyVisible:   'Everyone, up to neighbourhood'
        hidden:         'Nobody'
    bestFor:
        exactVisible:   'Best for businesses, teachers with studios outside their homes. It is best to not publish your home online.'
        fuzzyVisible:   'Best for everyone else. This way it is easier to find students, find teachers, and to just make friends.'
        hidden:         'Best for mysterious folks who neither teach nor learn.'

MediaDestinationDialog:

    nOf:
        image:
            one:    '{} Image'
            two:    '{} Images'
            other:  '{} Images'

    doWith:
        move:       'Move {what}'
        copy:       'Copy {what}'
        publish:    'Publish {what}'

    do:
        move:       'Move'
        copy:       'Copy'
        publish:    'Publish'

MediaDestinationWidget:
    toSubject:      'To'
    selectSubject:  '(Select Subject)'
    asPurpose:      'As'
    selectPurpose:  '(Select Album)'

MessagesTabWidget:
    iconTitle:      'Messages'

ModelAutocomplete:
    notFound:       '(Not Found)'

models:
    Image:
        purposes:
            4:              'My Portfolio'
            5:              'My Students'' Works'
            8:              'Other Photos'
            8_asTheOnly:    'Photos'
        statuses:
            noAlbums:       'No Albums'
            inconsistent:   'Inconsistent'
            unsorted:       'Unsorted'
            review:         'Review'
            rejected:       'Rejected'
            trash:          'Deleted'
            unknown:        'Unknown'

    ProductVariantFormat:
        'consulting/teachers-place':    'Teacher''s Place'
        'consulting/students-place':    'Student''s Place'
        'consulting/online':            'Online'

MoneyAccountTabWidget:
    withdraw:               'Withdraw'
    pendingWithdrawOrders:  'Pending Withdraw Orders:'

MoneyAccountTransaction:
    type:
        in:             'Deposit'
        out:            'Withdraw'
        send:           'Sent'
        receive:        'Received'
        earn:           'Earning'
        unearn:         'Cancelled Earning'
        spend:          'Spent'
        refund:         'Refund'

MoneyAccountTransactionsScreen:
    title:              'Transactions'
    placeholder:        'When you pay or get paid, here will be your transactions.'

MoneyAccountTransactionTable:
    field:
        id:             'ID'
        type:           'Type'
        money:          'Amount'
        balanceAfter:   'Left'
        dateTimeInsert: 'Date'
        description:    'Comment'

MyLessonListScreen:
    title:
        allMyLessons:   'All My Lessons'
        subjects:
            one:        '{} Subject'
            other:      '{} Subjects'
    actions:
        move:           'Move to Another Subject...'
        delete:         'Delete'
    select:             'Select Lessons'

    confirmDelete:      'Delete? This cannot be undone.'
    delete:             'Delete'

MyProfileTabWidget:
    iconTitle:          'Profile'

MyProfileWidget:
    edit:               'Edit'
    linkedProfiles:     'Connected Profiles'
    myProfile:          'My Profile'
    myTeaching:         'My Teaching'
    sortImportedMedia:  'Sort Imported Media'
    connect:            'Connect {@providerTitle}'
    connectMore:        'More:'

MyRefundRequestMessageBodyWidget:
    beforeComplaint:    'Requested refund:'
    afterComplaint:     'The teacher has time until {date}, {time} to provide their view of the situation. If they disagree, we will judge.'

OrderScreen:
    action:
        pay:            'Pay {amount}'
        hold:           'Use {amount}'
    title:              'Your Order'
    useBalance:         'Use balance:'
    payable:            'Payable:'
    balanceAfter:       'Will have {amount} left'
    oneHourLessonIn:    '1 hour lesson in {subject}'
    lessonTerms:        'You will agree on time in chat. Get full refund if you do not agree or if you cancel the lesson 24 hours in advance.'

OthersRefundRequestMessageBodyWidget:
    beforeComplaint:    'Requested refund:'
    afterComplaint:     'If you agree, tap "Agree to Refund". Otherwise please provide your view on this situation in this chat by {date}, {time}. When done, tap "Insist to Get the Money". We will then judge.'
    agree:              'Agree to Refund'
    agreePrompt:        'Are you sure you want to let this one go?'
    insist:             'Insist to Get the Money'
    insistPrompt:       'Are you sure you want to dispute this lesson result?'

PickedTabWidget:
    iconTitle:      'Picked'

PriceRangeTextWidget:
    any:                'Any'
    from:               'From {from}'
    to:                 'Up to {to}'
    range:              '{from}–{to}'

PurchaseMessageBodyPreviewWidget:
    text:               'Purchased 1 hour lesson in {subject}, {format}.'

PurchaseMessageBodyWidget:
    purchased:          'Purchased'
    oneHourLessonIn:    '1 hour lesson in {subject}'
    schedule:           'Schedule'
    reschedule:         'Reschedule'
    refund:             'Refund'

RateDeliveryButton:
    rate:               'Rate'

RefundAgreeMessageBodyPreviewWidget:
    text:               'Agreed to refund.'

RefundAgreeMessageBodyWidget:
    myText:             'Agreed to refund. Refund is handled. Nothing more needs to be done.'
    othersText:         'Agreed to refund. Your money is back to your CoursePlease account. Use them towards another lesson or withdraw at "Profile" tab.'

RefundDisagreeMessageBodyPreviewWidget:
    text:               'Did not agreed to refund. Wait for us to judge.'

RefundRequestMessageBodyPreviewWidget:
    myText:             'Requested refund.'
    notMyText:          'Requested refund. Provide your view of the situation by {date}, {time}.'

ReviewDeliveryAsCustomerScreen:
    reviewTitle:            'Review the Lesson by {teacherFirstName}'
    problemTitle:           'Report a Problem in the Lesson by {teacherFirstName}'
    complaintLabel:         'Tell us privately:'
    complaintHint:          'What exactly went wrong?'
    contactMe:              'Please contact me'
    refund:                 'I want my money back'
    refundComplaintLabel:   'Tell us privately (also visible to {teacherFirstName}):'

ReviewDeliveryAsSellerScreen:
    reviewTitle:            'Review working with {customerFirstName}'
    problemTitle:           'Report a Problem in the Lesson with {customerFirstName}'
    complaintLabel:         'Tell us privately:'
    complaintHint:          'What exactly went wrong?'
    contactMe:              'Please contact me'

ReviewDeliveryScreen:
    reviewHint:             'Type something helpful to those considering {firstName}'
    submit:                 'Submit'
    rating0:                'Tap a star'
    rating1:                'Terrible'
    rating2:                'Bad'
    rating3:                'Expected more'
    rating4:                'Good'
    rating5:                'Excellent!'

ScheduleScreen:
    title:
        schedule:       'Offer Your Time Slots'
        reschedule:     'Offer Your New Time Slots'
    titleWithName:
        schedule:       'Offer time slots, {name} will confirm'
        reschedule:     'Offer new time, {name} will confirm'
    buttons:
        offer:
            schedule:   'Offer'
            reschedule: 'Offer Change'
    earliestToStart:    'Earliest to start:'
    latestToFinish:     'Latest to finish:'
    timeIsLocal:        'Time is local to you: {timezone}'

SelectChatPlaceholderWidget:
    text:           'Select a Chat'

SelectProductSubjectScreen:
    title:          'Select Subject'

SendingChatMessageWidget:
    retry:          'Retry'
    delete:         'Delete'

SignInWebViewScreen:
    title:          'Sign In'

SignInWidget:
    #Title is replaced manually in AuthProviderWidget
    continueWith:   'Sign in with {@providerTitle}'

TeacherScreen:
    notCurrentlyTeachingThis:   'Not currently teaching this subject. Try other subjects or teachers.'
    student:                    'Student'
    subtitles:
        lessons:                'My Lessons'
        portfolio:              'My Works'
        customersPortfolio:     'My Students'' works'
        backstage:              'Life and Backstage'

TeachersTabWidget:
    title:          'Teachers'

TeachingLessonsTabWidget:
    title:              'Lessons'
    toSchedule:         'To Schedule'
    upcoming:           'Upcoming'
    awaitingApproval:   'Awaiting Approval'
    resolved:           'Past and Cancelled'

TeachingTabWidget:
    iconTitle:          'Teach'

TimeApproveMessageBodyPreviewWidget:
    text:           'Confirmed {date} at {time}.'

TimeApproveMessageBodyWidget:
    text:           'Confirmed {date} at {time}. Time is local to you: {timezone}.'

TimeOfferMessageBodyPreviewWidget:
    text:
        single:     'How about {date} at {time}?'
        multiple:   'How about {date} at {time}? +{nMore} more.'
    expired:        'Offered time, but it expired. Offer yours?'

TimeOfferMessageBodyWidget:
    tapToRecall:    'Tap a slot to recall.'

TimeSlotsWidget:
    title:              'How about {date}?'

TimeSlotWidget:
    message:            'Reserve {date} at {time}?'
    buttons:
        reserve:        'Reserve'
        cancel:         'Cancel'

UnknownErrorWidget:
    text:           'Unknown Error'

UnknownMessageBodyPreviewWidget:
    text:           'Can''t show this message. Please update the app.'

UnknownMessageBodyWidget:
    text:           'This message is not supported in the current app version. Please update the app.'

util:
    amountPerUnit:  '{amount} / {unit}'

    longDurationAgo:
        zero:       'Just now'
        minutesAgo:
            one:    '{} minute ago'
            other:  '{} minutes ago'
        hoursAgo:
            one:    '{} hour ago'
            other:  '{} hours ago'
        daysAgo:
            one:    '{} day ago'
            other:  '{} days ago'

    longDurationValidFor:
        minutes:
            one:    '{} more minute'
            other:  '{} more minutes'
        hours:
            one:    '{} more hour'
            other:  '{} more hours'
        days:
            one:    '{} more day'
            other:  '{} more days'

    shortDuration:
        zero:       'Just now'
        m:          '{n}m'
        h:          '{n}h'
        d:          '{n}d'

    units:
        h:          'h'

    currencySymbols:
        EUR:        '€'
        RUB:        '₽'
        USD:        '$'

ViewTeacherSubjectWidget:
    disabled:       'Not accepting customers'

WithdrawOrderTileWidget:
    status:
        0:          'Pending'

WithdrawScreen:
    title:          'Withdraw Money'
    buttons:
        addAccount: 'Add'
        withdraw:   'Withdraw'

WithdrawAccountDropdown:
    label:          'Account'

WithdrawServiceDropdown:
    label:          'Channel'
    hint:           '(Select Channel)'

WithSelectedButton:
    withNSelected:  'With {n}'
